{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/eventos';\n  }\n  getEvento() {\n    return this.http.get(this.baseUrl);\n  }\n  getEventosByTema(tema) {\n    return this.http.get(`${this.baseUrl}/${tema}/tema`);\n  }\n  getEventoById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,oCAAoC;EAEN;EAEjCC,SAAS;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEAC,gBAAgB,CAACC,IAAY;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,IAAI,OAAO,CAAC;EAChE;EAEAC,aAAa,CAACC,EAAU;IACtB,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,IAAII,EAAE,EAAE,CAAC;EACvD;;AAfWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;AAAA","names":["EventoService","constructor","http","getEvento","get","baseUrl","getEventosByTema","tema","getEventoById","id","factory"],"sourceRoot":"","sources":["C:\\projetos\\Udemy\\PROEVENTOS\\Front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Evento } from '../models/Evento';\n\n@Injectable(\n  //{providedIn: 'root'}\n)\nexport class EventoService {\n  baseUrl = 'https://localhost:5001/api/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  public getEvento(): Observable<Evento[]> {\n    return this.http.get<Evento[]>(this.baseUrl)\n  }\n\n  getEventosByTema(tema: string): Observable<Evento[]> {\n    return this.http.get<Evento[]>(`${this.baseUrl}/${tema}/tema`)\n  }\n\n  getEventoById(id: number): Observable<Evento> {\n    return this.http.get<Evento>(`${this.baseUrl}/${id}`)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}