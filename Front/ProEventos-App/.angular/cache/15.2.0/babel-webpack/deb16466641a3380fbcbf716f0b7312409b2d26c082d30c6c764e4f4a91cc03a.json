{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EventoListaComponent = class EventoListaComponent {\n  get filtroLista() {\n    return this._filtroLista;\n  }\n  set filtroLista(value) {\n    this._filtroLista = value;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n  filtrarEventos(filtrarPor) {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1);\n  }\n  constructor(eventoService, modalService, toastr, spinner) {\n    this.eventoService = eventoService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.eventos = [];\n    this.eventosFiltrados = [];\n    this.exibirImagem = true;\n    this._filtroLista = '';\n  }\n  ngOnInit() {\n    this.getEventos();\n  }\n  alterarImagem() {\n    this.exibirImagem = !this.exibirImagem;\n  }\n  getEventos() {\n    this.eventoService.getEvento().subscribe(_eventos => {\n      this.eventos = _eventos;\n      this.eventosFiltrados = this.eventos;\n    });\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-sm'\n    });\n  }\n  confirm() {\n    this.modalRef?.hide();\n    this.toastr.success('Deletado!', 'Evento deletado com sucesso!');\n  }\n  decline() {\n    ;\n    this.modalRef?.hide();\n  }\n};\nEventoListaComponent = __decorate([Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})], EventoListaComponent);\nexport { EventoListaComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA6B,eAAe;AAcvD,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAQ/B,IAAWC,WAAW;IACpB,OAAO,IAAI,CAACC,YAAY;EAC1B;EAEA,IAAWD,WAAW,CAACE,KAAa;IAClC,IAAI,CAACD,YAAY,GAAGC,KAAK;IACzB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,GAAG,IAAI,CAACI,cAAc,CAAC,IAAI,CAACJ,WAAW,CAAC,GAAG,IAAI,CAACK,OAAO;EACjG;EAEOD,cAAc,CAACE,UAAkB;IACtCA,UAAU,GAAGA,UAAU,CAACC,iBAAiB,EAAE;IAC3C,OAAO,IAAI,CAACF,OAAO,CAACG,MAAM,CACvBC,MAAW,IAAKA,MAAM,CAACC,IAAI,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,UAAU,CAAC,KAAK,CAAC,CAAC,IAC3EG,MAAM,CAACG,KAAK,CAACL,iBAAiB,EAAE,CAACI,OAAO,CAACL,UAAU,CAAC,KAAK,CAAC,CAAC,CAC5D;EACH;EAEAO,YACUC,aAA4B,EAC5BC,YAA4B,EAC5BC,MAAqB,EACrBC,OAA0B;IAH1B,kBAAa,GAAbH,aAAa;IACb,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;IA1BV,YAAO,GAAa,EAAE;IACtB,qBAAgB,GAAa,EAAE;IAC/B,iBAAY,GAAY,IAAI;IAC3B,iBAAY,GAAW,EAAE;EAwB7B;EAEGC,QAAQ;IACb,IAAI,CAACC,UAAU,EAAE;EACnB;EAEOC,aAAa;IAClB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEOF,UAAU;IACf,IAAI,CAACL,aAAa,CAACQ,SAAS,EAAE,CAACC,SAAS,CACrCC,QAAkB,IAAI;MACrB,IAAI,CAACnB,OAAO,GAAGmB,QAAQ;MACvB,IAAI,CAACrB,gBAAgB,GAAG,IAAI,CAACE,OAAO;IACtC,CAAC,CACF;EACH;EAEOoB,SAAS,CAACC,QAA0B;IACzC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACZ,YAAY,CAACa,IAAI,CAACF,QAAQ,EAAE;MAACG,KAAK,EAAE;IAAU,CAAC,CAAC;EACvE;EAEOC,OAAO;IACZ,IAAI,CAACH,QAAQ,EAAEI,IAAI,EAAE;IACrB,IAAI,CAACf,MAAM,CAACgB,OAAO,CAAC,WAAW,EAAE,8BAA8B,CAAC;EAClE;EAEOC,OAAO;IAAU;IACtB,IAAI,CAACN,QAAQ,EAAEI,IAAI,EAAE;EACvB;CACD;AA7DYhC,oBAAoB,eALhCD,SAAS,CAAC;EACToC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWrC,oBAAoB,CA6DhC;SA7DYA,oBAAoB","names":["Component","EventoListaComponent","filtroLista","_filtroLista","value","eventosFiltrados","filtrarEventos","eventos","filtrarPor","toLocaleLowerCase","filter","evento","tema","indexOf","local","constructor","eventoService","modalService","toastr","spinner","ngOnInit","getEventos","alterarImagem","exibirImagem","getEvento","subscribe","_eventos","openModal","template","modalRef","show","class","confirm","hide","success","decline","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\projetos\\Udemy\\PROEVENTOS\\Front\\ProEventos-App\\src\\app\\componentes\\eventos\\evento-lista\\evento-lista.component.ts"],"sourcesContent":["import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Evento } from 'src/app/models/Evento';\nimport { EventoService } from 'src/app/services/evento.service';\n\n\n\n@Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})\nexport class EventoListaComponent {\n\n  public modalRef?: BsModalRef;\n  public eventos: Evento[] = [];\n  public eventosFiltrados: Evento[] = [];\n  public exibirImagem: boolean = true;\n  private _filtroLista: string = '';\n\n  public get filtroLista(): string {\n    return this._filtroLista;\n  }\n\n  public set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n\n  public filtrarEventos(filtrarPor: string): Evento[] {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(\n      (evento: any) => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n      evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    )\n  }\n\n  constructor(\n    private eventoService: EventoService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n    ){};\n\n  public ngOnInit(): void {\n    this.getEventos();\n  }\n\n  public alterarImagem(): void {\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public getEventos(): void{\n    this.eventoService.getEvento().subscribe(\n      (_eventos: Evento[]) => {\n        this.eventos = _eventos;\n        this.eventosFiltrados = this.eventos;\n      }\n    );\n  }\n\n  public openModal(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  public confirm(): void {\n    this.modalRef?.hide();\n    this.toastr.success('Deletado!', 'Evento deletado com sucesso!');\n  }\n\n  public decline(): void {;\n    this.modalRef?.hide();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}